<?xml version="1.0" ?>

<!--

To run this demo, you must have following arducopter repo checked out:

https://github.com/iche033/ardupilot/tree/gazebo_sitl_irlock

Compile ArduCopter with SITL mode. Instructions are similar to:

http://ardupilot.org/dev/docs/building-px4-for-linux-with-make.html

but change the make target to sitl instead of px4-v2, i.e.

$ cd ardupilot/ArduCopter && make sitl

To start simulation, first run gazebo:

gazebo worlds/iris_irlock_demo.world

Gazebo starts up paused in a black screen. To run the simulation,
setup ArduCopter and run the command below in a separate terminal:

sim_vehicle.sh -j 4 -f Gazebo

This will start mavproxy. Wait until you have a GPS lock.
You can then do the usual mavprox commands with Gazebo, e.g.

# arm the motors
STABILIZE> arm throttle

# switch to LOITER mode
STABILIZE> mode LOITER

# take off using rc command
LOITER> rc 3 1700

# wait until the irlock beacon is within the view then switch to land mode
# to begin precision landing
LOITER> mode LAND

-->

<sdf version="1.6">
  <world name="default">
    <physics type="ode">
      <ode>
        <solver>
          <type>quick</type>
          <iters>100</iters>
          <sor>1.0</sor>
        </solver>
        <constraints>
          <cfm>0.0</cfm>
          <erp>0.9</erp>
          <contact_max_correcting_vel>0.1</contact_max_correcting_vel>
          <contact_surface_layer>0.0</contact_surface_layer>
        </constraints>
      </ode>
      <real_time_update_rate>0</real_time_update_rate>
      <max_step_size>0.0025</max_step_size>
    </physics>

    <include>
      <uri>model://sun</uri>
    </include>

    <include>
      <uri>model://ground_plane</uri>
    </include>

    <model name="iris">
      <include>
        <uri>model://iris_with_standoffs_demo</uri>
      </include>


      <!-- add new camera -->
      <link name='camera'>
        <pose>0 -0.01 0.070 1.57 0 1.57</pose>
        <inertial>
          <pose>0 0 0 0 0 0</pose>
          <mass>0.1</mass>
          <inertia>
            <ixx>0.001</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>0.001</iyy>
            <iyz>0</iyz>
            <izz>0.001</izz>
          </inertia>
        </inertial>
        <visual name='visual'>
          <pose>0 0 0 0 0 0</pose>
          <geometry>
            <cylinder>
              <radius>0.025</radius>
              <length>0.025</length>
            </cylinder>
          </geometry>
           <material>
            <script>
              <uri>file://media/materials/scripts/gazebo.material</uri>
              <name>Gazebo/Grey</name>
            </script>
          </material>
        </visual>

        <sensor name="camera" type="camera">
          <pose>0 0 0 -1.57 -1.57 0</pose>
          <camera>
            <horizontal_fov>1.0472</horizontal_fov>
            <image>
              <width>640</width>
              <height>480</height>
            </image>
            <clip>
              <near>0.05</near>
              <far>1000</far>
            </clip>
          </camera>
          <always_on>1</always_on>
          <update_rate>10</update_rate>
          <visualize>true</visualize>

         <!--  <plugin name="irlock" filename="libArduCopterIRLockPlugin.so">
              <fiducial>irlock_beacon_01</fiducial>
          </plugin> -->
          <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>webcam</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>camera_link</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
      </plugin>

        </sensor>

      </link>

      <!-- attach camera -->
      <joint type="revolute" name="base_camera_joint">
        <pose>0 0 0.0 0 0 0</pose>
        <parent>iris::iris_demo::gimbal_small_2d::tilt_link</parent>
        <child>camera</child>
        <axis>
          <limit>
            <lower>0</lower>
            <upper>0</upper>
          </limit>
          <xyz>0 0 1</xyz>
          <use_parent_model_frame>true</use_parent_model_frame>
        </axis>
      </joint>


      <!--add lidar-->
      <link name="hokuyo_link">
        <!-- <collision name="collision">
          <pose>0 0 0.5 0 0 0</pose>
          <geometry>
            <box size="0.1 0.1 0.1"/>
          </geometry>
        </collision> -->
        <visual name="visual">
          <pose>0 0 0.3 0 0 0</pose>
          <geometry>
            <mesh>
              <link>hokuyo::link</link>
            </mesh>
          </geometry>
        </visual>
        <inertial>
          <mass value="0" />
          <pose>0 0 0 0 0 0</pose>
          <inertia ixx="0" ixy="0" ixz="0" iyy="0" iyz="0" izz="0" />
        </inertial>

        <sensor type="ray" name="laser">
          <pose>0 0 0.3 0 0 0</pose>
          <visualize>true</visualize>
          <update_rate>10</update_rate>
          <ray>
            <scan>
              <horizontal>
                <samples>1024</samples>
                <resolution>1</resolution>
                <min_angle>-3.141593</min_angle>
                <max_angle>3.141593</max_angle>
              </horizontal>
            </scan>
            <range>
              <min>0.1</min>
              <max>30</max>
              <resolution>0.1</resolution>
            </range>
            <!-- <noise>
              <type>Gaussian</type>
              <mean>0.0</mean>
              <stddev>0.01</stddev>
            </noise> -->
          </ray>
          <plugin name="hokuyo_node" filename="libgazebo_ros_laser.so">
            <robotNamespace></robotNamespace>
            <topicName>/spur/laser/scan</topicName>
            <frameName>/hokuyo_sensor_link</frameName>
          </plugin>
        </sensor>
      </link>

      <joint name="hokuyo_joint" type="fixed">
        <pose>0 0 0 0 0 0</pose>
        <parent>iris::iris_demo::iris::base_link</parent>
        <child>hokuyo_link</child>
      </joint>

    </model>


    <model name="irlock_beacon_01">
      <pose>1.0 -1.0 0.005 0 0 0</pose>
      <link name="link">
         <inertial>
          <pose>0 0 0 0 0 0</pose>
          <mass>3.0</mass>
          <inertia>
            <ixx>0.019</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>0.01</iyy>
            <iyz>0</iyz>
            <izz>0.01</izz>
          </inertia>
        </inertial>
        <collision name="collision">
          <geometry>
            <box>
              <size>1.0 1.0 0.02</size>
            </box>
          </geometry>
          <surface>
            <friction>
              <ode>
                <mu>1.0</mu>
                <mu2>1.0</mu2>
                <fdir1>1 0 0</fdir1>
              </ode>
            </friction>
            <contact>
              <ode>
                <kp>1e+12</kp>
                <kd>1</kd>
                <max_vel>10</max_vel>
                <min_depth>0.003</min_depth>
              </ode>
            </contact>
          </surface>
        </collision>
        <visual name="visual2">
          <geometry>
            <box>
              <size>1.0 1.0 0.018</size>
            </box>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Green</name>
            </script>
          </material>
        </visual>
        <visual name="visual">
          <geometry>
            <box>
              <size>0.1 0.1 0.02</size>
            </box>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Red</name>
            </script>
          </material>
        </visual>
      </link>
    </model>



  </world>
</sdf>